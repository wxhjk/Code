//滑动窗口
class Solution {
    public List<Integer> findAnagrams(String s, String p) {
        int slen = s.length();
        int plen = p.length();
        if (plen > slen) {
            return new ArrayList<Integer>();
        }
        List<Integer> list = new ArrayList<>();
        int[] scount = new int[26];
        int[] pcount = new int[26];
        for (int i = 0; i < plen; i++) {
            scount[s.charAt(i) - 'a']++;
            pcount[p.charAt(i) - 'a']++;
        }
        if (Arrays.equals(scount,pcount)) {
            list.add(0);
        }
        for (int i = 0; i < slen - plen; i++) {
            scount[s.charAt(i) - 'a']--;
            scount[s.charAt(i + plen) - 'a']++;
            if (Arrays.equals(scount,pcount)) {
                list.add(i + 1);
            }
        }
        return list;
    }
}

//滑动窗口统计两个数组的差异数从而判断是否为异位词
class Solution {
    public List<Integer> findAnagrams(String s, String p) {
        int slen = s.length();
        int plen = p.length();
        if (plen > slen) {
            return new ArrayList<Integer>();
        }
        List<Integer> list = new ArrayList<>();
        int[] scount = new int[26];
        for (int i = 0; i < plen; i++) {
            scount[s.charAt(i) - 'a']++;
            scount[p.charAt(i) - 'a']--;
        }
        int differ = 0;
        for (int x : scount) {
            if (x != 0) {
                differ++;
            }
        }
        if (differ == 0) {
            list.add(0);
        }
        for (int i = 0; i < slen - plen; i++) {
            if (scount[s.charAt(i) - 'a'] == 0) {
                differ++;
            }else if (scount[s.charAt(i) - 'a'] == 1) {
                differ--;
            }
            scount[s.charAt(i) - 'a']--;
            if (scount[s.charAt(i + plen) - 'a'] == -1) {
                differ--;
            }else if (scount[s.charAt(i + plen) - 'a'] == 0) {
                differ++;
            }
            scount[s.charAt(i + plen) - 'a']++;
            if (differ == 0) {
                list.add(i + 1);
            }
        }
        return list;
    }
}