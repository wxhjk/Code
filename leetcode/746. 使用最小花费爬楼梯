class Solution {
    public int minCostClimbingStairs(int[] cost) {
        int len = cost.length;
        int[] dp = new int[len + 1];
        dp[0] = 0;
        dp[1] = 0;
        for (int i = 2; i < len + 1; i++) {
            dp[i] = Math.min(dp[i - 2] + cost[i - 2],dp[i - 1] + cost[i - 1]);
        }
        return dp[len];
    }
}

class Solution {
    public int minCostClimbingStairs(int[] cost) {
        int len = cost.length;
        int cur = 0;
        int prev = 0;
        for (int i = 2; i < len + 1; i++) {
            int next = Math.min(prev + cost[i - 2],cur + cost[i - 1]);
            prev = cur;
            cur = next;
        }
        return cur;
    }
}