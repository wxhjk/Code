class Solution {
    public int monotoneIncreasingDigits(int n) {
        if (n == 0) {
            return 0;
        }
        char[] arr = (n + "").toCharArray();
        int start = Integer.MAX_VALUE;
        for (int i = arr.length - 1; i >= 1; i--) {
            if (arr[i] < arr[i - 1]) {
                arr[i - 1]--;
                start = i;
            }
        }
        StringBuilder sb = new StringBuilder();
        for (int i = 0; i < arr.length; i++) {
            if (arr[i] == '0' && i == 0) continue;
            if (i >= start) {
                sb.append("9");
            }else {
                sb.append(arr[i]);
            }
        }
        return Integer.parseInt(sb.toString());
    }
}


class Solution {
    public int monotoneIncreasingDigits(int n) {
        String str = n + "";
        int j = str.length() - 1;
        StringBuilder sb = new StringBuilder(str);
        for (int i = sb.length() - 1; i >= 1; i--) {
            if (sb.charAt(i) < sb.charAt(i - 1)) {
                if (sb.charAt(i - 1) == '1' && i - 1 == 0) {
                    while (i <= j) {
                        sb.setCharAt(j,'9');
                        j--;
                    }
                    sb.deleteCharAt(i - 1);
                }else {
                    while (i <= j) {
                        sb.setCharAt(j,'9');
                        j--;
                    }
                    sb.setCharAt(i - 1, String.valueOf(sb.charAt(i - 1) - '1').charAt(0));
                }
            }
        }
        return Integer.parseInt(sb.toString());
    }
}