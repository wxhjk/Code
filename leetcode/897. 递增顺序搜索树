class Solution {
    public TreeNode prev;
    public TreeNode increasingBST(TreeNode root) {
        TreeNode newHead = new TreeNode(-1);
        prev = newHead;
        inOrder(root);
        return newHead.right;
    }
    public void inOrder(TreeNode root) {
        if (root == null) {
            return;
        }
        inOrder(root.left);
        prev.right = root;
        root.left = null;
        prev = root;
        inOrder(root.right);
    }
}

也可用链表存放每个中序遍历到的节点，再通过遍历链表相连。