class Solution {
    public int[] topKFrequent(int[] nums, int k) {
        Map<Integer,Integer> map = new HashMap<>();
        int[] arr = new int[k];
        for (int x : nums) {
            map.put(x,map.getOrDefault(x,0) + 1);
        }
        Set<Map.Entry<Integer,Integer>> set = map.entrySet();
        PriorityQueue<Map.Entry<Integer,Integer>> pq = new PriorityQueue<>((o1,o2) -> o1.getValue() - o2.getValue()); 
        for (Map.Entry<Integer,Integer> entry : set) {
            pq.offer(entry);
            if (pq.size() > k) {
                pq.poll();
            }
        }
        for (int i = k - 1; i >= 0; i--) {
            arr[i] = pq.poll().getKey();
        }
        return arr;
    }
}