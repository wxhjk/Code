class Solution {
    public boolean backspaceCompare(String s, String t) {
        int i = s.length() - 1;
        int j = t.length() - 1;
        int p1 = 0;
        int p2 = 0;
        while (i >= 0 || j >= 0) {
            while (i >= 0) {
                if (s.charAt(i) == '#') {
                    p1++;
                    i--;
                }else if(p1 > 0) {
                    i--;
                    p1--;
                }else {
                    break;
                }
            }
            while (j >= 0) {
                if (t.charAt(j) == '#') {
                    p2++;
                    j--;
                }else if(p2 > 0) {
                    j--;
                    p2--;
                }else {
                    break;
                }
            }
            if (i >= 0 && j >= 0) {
                if (s.charAt(i) != t.charAt(j)) {
                    return false;
                }
            }else {
                if (i * j <= 0) {
                    return false;
                }
            }
            i--;
            j--;
        }
        return true;
    }
}


class Solution {
    public boolean backspaceCompare(String s, String t) {
        Stack<Character> stack1 = new Stack<>();
        Stack<Character> stack2 = new Stack<>();
        for (int i = 0; i < s.length(); i++) {
            char ch = s.charAt(i);
            if (ch == '#') {
                if (!stack1.isEmpty()) {
                    stack1.pop();
                }
            }else {
                stack1.push(ch);
            }
        }
        for (int j = 0; j < t.length(); j++) {
            char ch = t.charAt(j);
            if (ch == '#') {
                if (!stack2.isEmpty()) {
                    stack2.pop();
                }
            }else {
                stack2.push(ch);
            }
        }
        if (stack1.size() == stack2.size()) {
            while (!stack1.isEmpty() && !stack2.isEmpty()) {
                if (stack1.pop() != stack2.pop()) {
                    return false;
                }
            } 
        }else {
            return false;
        }
        return true;
    }
}