class Solution {
    public int countSubstrings(String s) {
        int len = s.length();
        boolean[][] dp = new boolean[len][len];
        int num = 0;
        for (int i = len - 1; i >= 0; i--) {
            for (int j = i; j < len; j++) {
                if (s.charAt(i) == s.charAt(j)) {
                    if (j - i <= 1) {
                        num++;
                        dp[i][j] = true;
                    }else if (dp[i  + 1][j - 1]) {
                        num++;
                        dp[i][j] = true;
                    }
                }
            }
        }
        return num;
    }
}

class Solution {
    public int countSubstrings(String s) {
        int len = s.length();
        int num = 0;
        for (int i = 0; i < len; i++) {
            for (int j = 0; j <= 1; j++) {
                int l = i;
                int r = i + j;
                while (l >= 0 && r < len && s.charAt(l--) == s.charAt(r++)) {
                    num++;
                }
            }
        }
        return num;
    }
}

class Solution {
    public int countSubstrings(String s) {
        int len = s.length();
        boolean[][] dp = new boolean[len][len];
        int num = 0;
        for (int i = 0; i < len; i++) {
            for (int j = 0; j <= i; j++) {
                if (s.charAt(i) == s.charAt(j)) {
                    if (i - j <= 1) {
                        num++;
                        dp[i][j] = true;
                    }else if (dp[i - 1][j + 1]) {
                        num++;
                        dp[i][j] = true;
                    }
                }
            }
        }
        return num;
    }
}
