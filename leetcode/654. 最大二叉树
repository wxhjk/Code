class Solution {
    int i = 0;
    public TreeNode constructMaximumBinaryTree(int[] nums) {
        return build(nums,0,nums.length - 1);
    }
    public TreeNode build(int[] nums,int l,int r) {
       if (l > r) {
           return null;
       }
       int i = max(nums,l,r);
       int a = nums[i];
       TreeNode root = new TreeNode(a);
       root.left = build(nums,l,i - 1);
       root.right = build(nums,i + 1,r);
       return root;
    }
    public int max(int[] nums,int l, int r) {
        int max = nums[l];
        int max_i = l;
        for (int i = l; i <= r; i++) {
            if (nums[i] > max) {
                max = nums[i];
                max_i = i;
            }
        }
        return max_i;
    }
}