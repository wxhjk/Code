class Solution {
    public String reverseWords(String s) {
        StringBuilder sb = removeSpace(s);
        reverseString(sb,0,sb.length() - 1);
        reverseEach(sb);
        return sb.toString();
    }
    public StringBuilder removeSpace(String s) {
        int start = 0;
        int end = s.length() - 1;
        while (s.charAt(start) == ' ') start++;
        while (s.charAt(end) == ' ') end--;   
        StringBuilder sb = new StringBuilder();
        for (int i = start; i <= end; i++) {
           char ch = s.charAt(i);
           if (ch != ' ' || sb.charAt(sb.length() - 1) != ' ') {
               sb.append(ch);
           }
        }
        return sb;
    }
    public void reverseString(StringBuilder sb,int start,int end) {
        while (start < end) {
            char tmp = sb.charAt(start);
            sb.setCharAt(start,sb.charAt(end));
            sb.setCharAt(end,tmp);
            start++;
            end--;
        }
    }
    public void reverseEach(StringBuilder sb) {
        int start = 0;
        for (int end = 0; end < sb.length(); end++) {
            if (sb.charAt(end) == ' ') {
                reverseString(sb,start,end - 1);
                start = end + 1;
            }else if (end == sb.length() - 1) {
                reverseString(sb,start,end);
            }
        }
    }
}

class Solution {
    public String reverseWords(String s) {
        String str1 = removeSpace(s);
        char[] str2 = str1.toCharArray();
        reverse(str2,0,str1.length() - 1);
        reverseAllWord(str2);
        return new String (str2);
    }
    public String removeSpace(String s) {
        char[] ss = s.toCharArray();
        StringBuilder sb = new StringBuilder();
        int i = 0;
        int j = ss.length - 1;
        while (i < ss.length - 1 && ss[i] == ' ') i++;
        while (j >= 0 && ss[j] == ' ' ) j--;
        for (; i <= j; i++) {
            if (ss[i] != ' ' || sb.charAt(sb.length() - 1) != ' ') {
                sb.append(ss[i]);
            }
        }
        return sb.toString();
    }
    public void reverse(char[] str,int l,int r) {
        while (l < r) {
            char tmp = str[l];
            str[l] = str[r];
            str[r] = tmp;
            r--;
            l++;
        }
    }
    public void reverseAllWord(char[] s) {
        int x = 0;
        for (int i = 0; i <= s.length; i++) {
            if (i == s.length || s[i] == ' ') {
                reverse(s,x,i - 1);
                x = i + 1;
            }
        }
    }

//一次遍历完成
class Solution {
    public String reverseWords(String s) {
        char[] str = s.toCharArray();
        StringBuilder sb = new StringBuilder();
        int left = 0;
        int right = s.length() - 1;
        while (str[left] == ' ') left++;
        while (str[right] == ' ') right--;
        while (left <= right) {
            int index = right;
            while (index >= left && str[index] != ' ') index--;
            for (int i = index + 1; i <= right; i++) sb.append(str[i]);
            if (index > left) {
                sb.append(' ');
            }
            while (index >= left && str[index] == ' ') index--;
            right = index;
        }
        return sb.toString();
    }
}