class Solution {
    List<List<Integer>> result = new ArrayList<>();
    List<Integer> list = new ArrayList<>();
    int sum = 0;
    public List<List<Integer>> combinationSum3(int k, int n) {
        backTracking(k,n,1);
        return result;
    }
    public void backTracking(int k, int n, int start) {
        if (sum > n) {
            return;
        }
        if (list.size() == k) {
            if (sum == n) {
                result.add(new ArrayList<>(list));
            }
            return;
        }
        for (int i = start; i <=  9 - (k  - list.size()) + 1; i++) {
            sum += i;
            list.add(i);
            backTracking(k,n,i + 1);
            sum -= i;
            list.remove(list.size() - 1);
        }
    }
}