public class QuickSort {
    public static void quickSort(int[] arr,int L,int R){
        if(arr==null||arr.length<2){
            return;
        }
        if(L<R){
            swap(arr,L+(int)(Math.random()*(R-L+1)),R);
            int[] p=partition(arr,L,R);
            quickSort(arr,L,p[0]);
            quickSort(arr,p[1],R);
        }
    }
    public static int[] partition(int[]arr,int L,int R){
        int less=L;
        int more=R;
        while(L<more){
            if(arr[L]<arr[R]){
                swap(arr,less++,L++);
            }
            else if(arr[L]>arr[R]){
                swap(arr,L,--more);
            }else{
                L++;
            }
        }
        swap(arr,more,R);
        return new int[]{less-1,more+1};
    }
    public static void swap(int[] arr,int L,int R){
        int tmp=arr[L];
        arr[L]=arr[R];
        arr[R]=tmp;
    }

    public static void main(String[] args) {
        int[] arr={1,5,4,6,7,8,9,3,4,5,6,23,5,5,3,2,3,5,8,45,9,6,4,6,8,4};
        quickSort(arr,0, arr.length-1);
        System.out.println(Arrays.toString(arr));
    }
}
