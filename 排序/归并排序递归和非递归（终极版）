public class TextDemo {
    public static void main(String[] args) {
        int[] arr = {5,8,3,4,2,9,1,0,3};
        mergeSort2(arr,0,arr.length - 1);
        System.out.println(Arrays.toString(arr));
    }
    public static void mergeSort(int[] arr,int L,int R) {
        if (L == R) {
            return;
        }
        int mid = L + ((R - L) >> 1);
        mergeSort(arr,L,mid);
        mergeSort(arr,mid + 1,R);
        merge(arr,L,R,mid);
    }
    public static void merge(int[] arr,int L,int R,int mid) {
        int[] brr = new int[R - L + 1];
        int l = L;
        int r = mid + 1;
        int i = 0;
        while (l <= mid && r <= R) {
            brr[i++] = arr[l] < arr[r] ? arr[l++] : arr[r++];
        }
        while (l <= mid) {
            brr[i++] = arr[l++];
        }
        while (r <= R) {
            brr[i++] = arr[r++];
        }
        for (i = 0; i < brr.length; i++) {
            arr[L + i] = brr[i];
        }
    }
    //非递归
    public static void mergeSort2(int[] arr,int L,int R) {
        int nums = 1;
        while (nums < arr.length) {
            for (int i = 0; i < arr.length; i += nums * 2) {
                int mid = i + nums - 1;
                if (mid >= arr.length) {
                    mid = arr.length - 1;
                }
                int r = mid + nums;
                if (r >= arr.length) {
                    r = arr.length - 1;
                }
                merge(arr,i,r,mid);
            }
            nums *= 2;
        }
    }
}
