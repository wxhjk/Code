import java.util.ArrayList;
/**
public class TreeNode {
    int val = 0;
    TreeNode left = null;
    TreeNode right = null;

    public TreeNode(int val) {
        this.val = val;

    }

}
*/
public class Solution {
    public ArrayList<ArrayList<Integer>> FindPath(TreeNode root,int expectNumber) {
        ArrayList<ArrayList<Integer>> result = new ArrayList<>();
        int target = expectNumber;
        ArrayList<Integer> list = new ArrayList<>();
        Path(result,list,target,root);
        return result;
        
    }
    public void Path(ArrayList<ArrayList<Integer>> result,ArrayList<Integer> list,int target,TreeNode root) {
        if (root == null) {
            return;
        }
        list.add(root.val);
        target -= root.val;
        if (root.left == null && root.right == null && target == 0) {
            result.add(new ArrayList<Integer>(list));
        }
        Path(result,list,target,root.left);
        Path(result,list,target,root.right);
        list.remove(list.size() - 1);
    }
}