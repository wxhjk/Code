public class Solution {
    public ListNode Merge(ListNode list1,ListNode list2) {
        return merge(list1,list2);
    }
    public ListNode merge(ListNode list1,ListNode list2) {
        if (list1 == null) {
            return list2;
        }
        if (list2 == null) {
            return list1;
        }
        ListNode head = null;
        if (list1.val < list2.val) {
            head = list1;
            head.next = merge(list1.next,list2);
        }else {
            head = list2;
            head.next = merge(list1,list2.next);
        }
        return head;
    }
}

public class Solution {
    public ListNode Merge(ListNode list1,ListNode list2) {
        ListNode cur1 = list1;
        ListNode cur2 = list2;
        ListNode newHead = new ListNode(-1);
        ListNode node = newHead;
        while (cur1 != null && cur2 != null) {
            if (cur1.val < cur2.val) {
                node.next = cur1;
                cur1 = cur1.next;
            }else {
                node.next = cur2;
                cur2 = cur2.next;
            }
            node = node.next;
        }
        if (cur1 == null) {
            node.next = cur2;
        }
        if (cur2 == null) {
            node.next = cur1;
        }
        return newHead.next;
    }
}